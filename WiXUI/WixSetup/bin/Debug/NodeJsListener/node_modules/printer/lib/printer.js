var printer = require('../build/MultichoicePrinting')
    , fs = require("fs")
    , child_process = require("child_process")
    , os = require("os")
    , path = require("path");

function print(parameters){
	if(process.platform=="win32"){// call C++ binding
		if(!printer.printReceipt){
			error("Not supported, try to compile this package with MSC");
			return;
		}
		try{
		    var result = printer.printReceipt(parameters.printerName, parameters.printerType, parameters.printerIpAddress, path.dirname(require.main.filename), parameters.printerText);
			if(result.indexOf("Error -") < 0){
				parameters.success();
			}else{
				parameters.error(Error(result));
			}
		}catch (e){		
			error(e);
		}
    }else if (!printer.printReceipt){// should be POSIX
        var temp_file_name = path.join(os.tmpDir(),"printing");
        fs.writeFileSync(temp_file_name, data);
        child_process.execFile('lpr', ['-P' + parameters.printerName, '-oraw', '-r', temp_file_name], function(err, stdout, stderr){
            if (err !== null) {
                error('ERROR: ' + err);
                return;
            }
            if (stderr) {
                error('STD ERROR: ' + stderr);
                return;
            }
        });
    }else{
		error("Not supported");
	}
}

function initiateCardTransaction(parameters) {
    var result = printer.initiateCardTransaction(parameters.terminalIP, parameters.terminalText, parameters.amount);
    console.log(result);
}

module.exports.initiateCardTransaction = initiateCardTransaction
module.exports.print = print
