{
	"manageStock": {
    "manageStockmenu": "Manage Stock"
  },

	"general": {
		"passCode": "Password",
		"comment": "Comment",
		"unauthoriseError": "You can not authorise yourself!",
		"accessDenied": "Access Denied. Only supervisor can authorize override of pre-repair quote!",
		"moduleTitle": "Authorize Override Pre-Repair Quote",
		"updatedFinalQuote": "Final Amount Required: 0.00 ",
		"preFinalQuoteString": "Total Amount Required: ",
		"finalQuoteString": "Final Amount Required: ",
		"SupervisorAuthorization": "Supervisor Authorization",
		"source": "KomodoUI",
		"error": "Error",
		"noDeviceError": "No Device Found",
		"reuiredCustomerError": "A customer is required to perform this operation.",
		"rquiredCustomerDevice": "A customer with devices is required to perform this operation."
	},

	"printDocument": {
		"title": "Print Documents",
		"gridTitle": "Documents",
		"reference": "Reference",
		"referenceNumber": "Reference Number",
		"documentType": "Document Type",
		"documentNumber": "Document Number",
		"actions": "Actions"
	},

  "customPairDevice": {
    "decoderSerialNumber": "Decoder serial number",
    "donePublishRequestOnBus1": "Event Message for ",
    "donePublishRequestOnBus2": " has published successfully",
    "error": "Error",
    "errorCustomPairDevice": "Could not pair devices with serial numbers: ",
    "errorCustomPairDeviceMessage": " Error message:",
    "exception": "Exception",
    "gridTitle": "Devices",
    "logInit": "Constructing Custom Pair Device controller",
    "logPublishRequestOnBus1": "Event Message for ",
    "logPublishRequestOnBus2": "' has failed",
    "messageCustomPairDevice": "Devices paired successfully",
    "messageMessageDeliveryFailure": "Communication failure between the browser and webMethods broker generic publish. No specific delivery failure method for the given event name could be found",
    "messageMessageFailureMessageEventReceived": "Problem has occurred while logging an activity in CRM",
    "messageMessageFault": "FaultException occurred in the broker indicating message can't be processed for message type. No fault method implementation",
    "messageMessageHandle": "Message event name and/or process fields are null. Message = ",
    "messageMessageHandleProcess": ", Process: ",
    "messageMessageHandleType": " Message type: ",
    "messageMessageReceived": "A successful message was received for the sender but there is no specific message for the received message event name",
    "pair": "Pair",
    "smartcardSerialNumber": "Smartcard serial number",
    "title": "Pair Device",
    "warning": "Warning",
    "warningPairDeviceDecoder": "Please enter a decoder serial number",
    "warningPairDeviceSmartcard": "Please enter a smartcard serial number",
    "success": "Success"
  },

  "deviceInformation": {
    "failRetrieveDeviceInfo": "An error has occurred, please look at logs for more information",
    "doneRetrieveDeviceInfo1": "Unable to retrieve information for device with id: ",
    "doneRetrieveDeviceInfo2": ". Null data returned. ",
    "messageSearchDeviceSAP": "Please enter a device number",
    "errorFixDeviceICC": "Device moved onto customers account and agreement",
    "success": "Success",
    "messagePubNotifyElasticSearch": "Elastic Search Notified",
    "successFixDeviceICC": "Device moved onto customers account and agreement",
    "warning": "Warning",
    "error": "Error",
    "exception": "Exception",
    "logInit": "Constructing Device Information controller",
    "title": "Get Technical Device Information",
    "gridTitle": "Find Device",
    "deviceNumber": "Device Number",
    "search": "Search",
    "fix": "Add device to customer",
    "technicalDeviceInformation": "Technical Device Information",
    "deviceModel": "Device Model",
    "deviceStatus": "Device Status (SAP)",
    "deviceType": "Device Type",
    "location": "Location",
    "country": "Country",
    "plant": "Plant",
    "DCCStartDate": "DCC Start Date",
    "manufacturerWarranty": "Manufacturer Warranty",
    "manufacturerWarrantyStartDate": "ManufacturerWarrantyStartDate",
    "manufacturerWarrantyEndDate": "ManufacturerWarrantyEndDate",
    "customerWarranty": "Customer Warranty",
    "customerWarrantyStartDate": "CustomerWarrantyStartDate",
    "customerWarrantyEndDate": "CustomerWarrantyEndDate",
    "deviceAttributes": "Device Attributes",
    "linkedSmartcard": "Linked Smartcard (SAP)",
    "linkedSmartcardICC": "Linked Smartcard (ICC)",
    "MACAddress": "MAC Address",
    "hardwareVersion": "Hardware Version",
    "HDDSize": "HDD Size",
    "originalSmartcard": "Original Smartcard",
    "powerSupplyNumber": "Power Supply Number",
    "CSSNumber": "CSS Number (SAP)",
    "CSSNumberICC": "CSS Number (ICC)",
    "deviceInKMS": "Device in KMS",
    "campaign": "Campaign",
    "deviceServiceHistory": "Device Service History",
    "quoteNumber": "Quote Number",
    "serviceOrderNumber": "Service Order Number",
    "serviceType": "Service Type",
    "date": "Date",
    "deviceStatusHistory": "Device Status History",
    "user": "User",
    "status": "Status",
    "timestamp": "Timestamp",
    "linkedDeviceSerial": "Linked Device",
    "ICCStatus": "Device Status (ICC)",
    "customerInformation": "Customer Information",
    "customerNumber": "Customer Number",
    "customerName": "Customer Name",
    "platform": "Platform",
    "deviceDescription": "Device Description",
    "notifyES": "Sync"
  },

	"changeOfCountry": {
		"menu": "Change of Country",
		"title": "Change of Country",
		"viewTitle": "Change of Country",
		"deviceSerialNumber": "Device Serial Number",
		"smartcardSerialNumber": "Smartcard Serial Number",
		"transfer": "Transfer",
		"messageBoxTitle": "Change of Country",
		"swapSmartcard": "Swap Smartcard",
		"decoderSerialNumber": "Decoder Serial Number",
		"smartcardNumber": "Smartcard Number",
		"newSmartcardSerialNumber": "New Smartcard Serial Number",
		"swap": "Swap",
		"selectBusinessUnit": "Business unit:",
		"enterSmartcard": "*Please enter a new smartcard serial number",
		"smartcardLessThan": "*Please enter a new smartcard serial number that is less than 10 characters long",
		"selectBusinessUnit2": "Please select a business unit",
		"deviceSerialNumber2": "Please enter a device serial number",
		"deviceSerialNumberLessThan": "Please enter a device serial number that is less than 10 characters long",
		"smartcardSerialNumber2": "Please enter a smartcard serial number",
		"smartcardLessThan2": "Please enter a new smartcard serial number that is less than 10 characters long",
		"changeOfCountrySent": "Change of country sent for processing",
		"unableChangeOfCountrySend": "Unable to send change of country for processing",
		"seeLogsDetails": "Please see logs for more details",
		"changeOfCountrySuccessful": "Change of country was successful",
		"changeOfCountryPartiallyCompleted": "Change of country was partially completed. An email has been sent to the relevant SAP plant notifying them to complete the process.",
		"invalidReturnCode": "Error: Invalid return code"
	},

	"issueHardwareAgainstServiceOrder": {
		"menu": "Issue Hardware - Sales",
		"title": "Issue Hardware Against Sales Quote Number",
		"findIssuedStock": "Find Issued Stock",
		"quoteNumber": "Quote Number",
		"issueStock": "Issue Hardware",
		"deviceModel": "Device Model",
		"serviceDevice": "Service Device",
		"issueHardware": "Issue Hardware",
		"retrieveQuote": "Retrieve Quote",
		"quoteRequired": "Quote Number is required",
		"issueHardwareAgainstQuote": "Issue Hardware Against Quote",
		"validDevice": "Please enter valid device number to Issue!",
		"validQuote": "Please enter valid Quote number to retrieve!",
		"unableRetrieveQuoteData": "Unable to retrieve Quote Data",
		"invalidQuoteDevice": "Invalid Quote to issue Device",
		"noDataQuote": "No Data found for entered Quote",
		"issueAgainstSalesOrder": "Issue hardware against sales order",
		"salesOrderSuccess": "Issue hardware against sales order performed successfully",
		"problemCRM": "Problem has occurred while logging an activity in CRM.",
		"successfulMessage": "A successful message was received for the sender but there is no specific message for the received message event name.",
		"communicationFailure": "Communication failure between the browser and webMethods broker generic publish. No specific delivery failure method for the given event name could be found.",
		"faultException": "FaultException occurred in the broker indicating message can't be processed for message type. No fault method implementation."
	},

	"issueHardwareAgainstSwapOrder": {
		"menu": "Issue Hardware - Customer Repair",
		"title": "Issue Hardware Against Customer Repair",
		"findIssuedStock": "Find Hardware Quote",
		"issueStock": "Issue Hardware",
		"quoteNumber": "Quote Number",
		"serviceDevice": "Service Device",
		"issueHardware": "Issue Hardware",
		"reason": "Reason:",
		"retrieveQuote": "Retrieve Quote",
		"deviceModel": "Device Model",
		"faultyDevice": "Faulty Serial Number",
		"faultySerialNumber": "Serial Number",
		"sQuoteNumber": " ",
		"hardwareissuedsucessfully": "Hardware Issued Successfully",
		"issuehardwareagainstquote": "Issue Hardware Against Quote",
		"validationerrorforvalues": "One or more of the required values is not filled in properly. Please correct to continue!",
		"errorMessageQuote": "Quote number is not associated with the selected customer",
		"smartCardNumber": "Smartcard Number",
		"invalidQuoteError": "Invalid quote. Please check quote and try again.",
		"invalidQuoteHeader": "Issue Hardware Against Repair",
		"errorInvalidPlant": "Device __device__ is not in this Branch, can only issue from __collectionpoint__ ."
	},

	"issueHardwareAgainstSwapAvailability": {
		"menu": "Issue Hardware - Swap",
		"title": "Issue Hardware Against Swap",
		"findIssuedStock": "Find Hardware Quote",
		"issueStock": "Issue Hardware",
		"quoteNumber": "Quote Number",
		"serviceDevice": "Service Device",
		"issueHardware": "Issue Hardware",
		"reason": "Reason:",
		"retrieveQuote": "Retrieve Quote",
		"deviceModel": "Device Model",
		"faultyDevice": "Faulty Device",
		"faultySerialNumber": "Faulty Serial Number",
		"replacementDevice": "Replacement Device",
		"replacementSerialNumber": "Replacement Serial Number",
		"sQuoteNumber": " ",
		"quoteRequired": "Quote Number is required",
		"faultySerialMismatch": "Faulty serial number entered does not match the serial number on quote.",
		"faultySmartcartMismatch": "Faulty smartcart number entered does not match the serial number on quote.",
		"noQuote": "No hardware on quote",
		"goodsMovementIssuedAlready": "Goods movement issued already",
		"validQuoteNumber": "Please enter valid quote number to retrieve.",
		"requiredValues": "One or more of the required values is not filled in properly. Please correct to continue!",
		"issueHardwareAgainstService": "Issue hardware against service order",
		"issueHardwareAgainstServiceSuccessfully": "Issue hardware against service order performed successfully"
	},

	"linkDelink": {
		"title": "Change Device-Package Link",
		"gridTitle": "Add Devices",
		"gridTitle2": "Move Active Packages",
		"fromDevice": "From Device",
		"toDevice": "To Device",
		"deviceName": "Device Name",
		"deviceStatus": "Device Status",
		"insurance": "Insurance",
		"linkedSmartcard": "Linked Smartcard",
		"package": "Package",
		"movePackages": "Move Packages",
		"addDevice": "Add",
		"deviceNumber": "Smartcard or Device Number",
		"customerNotLoaded": "Customer not loaded",
		"customerIsRequired": "A customer is required to perform this operation.",
		"deviceSerialNumber": "Please fill in device serial number.",
		"linkDelink": "Link Delink",
		"selectFromdevice": "Please Select a from device",
		"selectToDevice": "Please Select a to device",
		"serialNumber": "Serial Number",
		"linkDelinkAddDevice": "Link Delink - Add Device",
		"accountInformationNotLoaded": "Customer account information not loaded.",
		"customerDetailsNotLoaded": "Customer details not loaded.",
		"enterDecoderSerial": "Enter a decoder serial number or a smartcard serial number.",
		"noFinancialAccount.": "No financial accounts.",
		"noMethodOfPayment": "No method of payment.",
		"incompleteAccountDetails": "Incomplete account details.",
		"customerNotFound": "Customer not found.",
		"captureMissingAddress": "Please capture missing physical address information.",
		"notPaired": "The device you are trying to add is not paired. Would you like to pair device?",
		"hardwareDetailsNotLoaded": "Hardware(decoder) details not loaded.",
		"deviceAddedToCustomer": "Device added to customer:",
		"deviceNotAddedToCustomer": "Device not added to customer.",
		"noDeviceFound": "No Device Found",
		"noDevicesLoaded": "No devices loaded",
		"customerWithDevicesRequired": "A customer with devices is required to perform this operation.",
		"hardwareServicesTransferred": "Hardware Services Transferred",
		"failedLoading": "Failed loading",
		"errorInFunction": "Error in function",
		"exception": "Exception",
		"errorOccurred": "An error has occurred",
		"problemCRM": "Problem has occurred while logging an activity in CRM.",
		"messageReceivedFailure": "Message Received Failure",
		"messageType": "Message type",
		"aProblemOccurred": "A problem occurred",
		"messageEventNull": "Message event name and/or process fields are null. Message = ",
		"aSuccessfulMessage": "A successful message was received for the sender but there is no specific message for the received message event name.",
		"communicationFailure": "Communication failure between the browser and webMethods broker generic publish. No specific delivery failure method for the given event name could be found.",
		"faultException": "FaultException occurred in the broker indicating message can't be processed for message type. No fault method implementation.",
		"eventMessageFailed": "Event Message for event has failed:"
	},

  "changeDeviceOwnership": {
    "back": "BACK",
    "bulkCOOBlock": "Function only allowed for Commercial Customers",
    "changeDeviceOwnership": "Change Device Ownership",
    "changeOwner": "Change Owner",
    "date": "Date",
    "deviceName": "Device Name",
    "deviceNumber": "Device Number",
    "deviceStatus": "Device Status",
    "documentGridAction": "Action",
    "documentGridFulfill": "Fulfillment",
    "documentGridType": "Document Type",
    "documentGridView": "Document",
    "donePublishEvent": " has been published successfully",
    "error": "Error",
    "errorHardwares": "No Device Found",
    "errorRetrieveHardware": "A customer with devices is required to perform this operation",
    "errorStart": "A customer is required to perform this operation",
    "exception": "Exception",
    "failPublishEvent": " has failed",
    "gridTitle": "Change Ownership",
    "insurance": "Insurance",
    "linkedSmartcard": "Linked Smartcard",
    "logGetHardwareModelDesc": "Data not found for hardwareModelID: ",
    "logInit": "Constructing Change Device Ownership controller",
    "messageChangeDeviceOwnership": "Please select the device before sending the request",
    "messageDeliveryFailure": "Communication failure between the browser and webMethods broker generic publish. No specific delivery failure method for the given event name could be found",
    "messageDeviceDelinkedForChangeOwnershipReceived": "Device was not made available for the next customer",
    "messageFailureMessageEventReceived": "Problem has occurred while logging an activity in CRM",
    "messageFault": "FaultException occurred in the broker indicating message can't be processed for message type. No fault method implementation",
    "messageHandle": "Message event name and/or process fields are null. Message",
    "messageHandleException": "Error in function",
    "messageHandleProcess": "Process",
    "messageHandleType": "Message type",
    "messagePublishRequestOnBus": "Event Message for ",
    "messageReceived": "A successful message was received for the sender but there is no specific message for the received message event name",
    "messageStatusReason": "Device status reason not found",
    "messageStatusReason1": "Device was successfully made available for the next customer",
    "messageStatusReason2": "Device was scheduled for cancellation",
    "messageValidator": "Please fill in device serial number",
    "success": "Success",
    "title": "Change Device Ownership",
    "warning": "Warning"
  },

  "bulkChangeDeviceOwnership": {
    "messageReadFileContent": "File data invalid",
    "messageReadFileContent2": "File has no data",
    "messageReadTextFile": "File error",
    "messageReadTextFile2": "Invalid file type. Please select a text or csv file type",
    "messageBulkChangeDeviceOwnership": "Please upload a change of ownership letter",
    "messageBulkChangeDeviceOwnership2": "Please select at least one device for change of ownership",
    "messageBulkChangeDeviceOwnership3": "File has been queued successfully. Please wait for confirmation email",
    "errorMessage": "Error message",
    "messageLoadData": "Commercial Customer Required",
    "messageLoadData2": "A customer is required to perform this operation",
    "error": "Error",
    "exception": "Exception",
    "warning": "Warning",
    "logInit": "Constructing Bulk Change Device Ownership controller",
    "title": "Change Device Ownership",
    "process": "Process",
    "fileUpload": "File Upload",
    "customSelection": "Custom Selection",
    "gridTitle": "Change Ownership",
    "deviceName": "Device Name",
    "deviceModel": "Device Model",
    "deviceNumber": "Device Number",
    "deviceStatus": "Device Status",
    "linkedSmartcard": "Linked Smartcard",
    "linkedSmartcardStatus": "Linked Smartcard Status",
    "changeOwner": "Change Owner",
    "changeDeviceOwnership": "Change Device Ownership",
    "documentGridType": "Document Type",
    "documentGridFulfill": "Fulfillment",
    "documentGridAction": "Action",
    "documentGridView": "Document",
		"bulkCOOBlock": "Function only allowed for Commercial Customers",
		"success" : "Bulk Change of Ownership"
  },

	"createRepairsOrder": {
		"devices": "Devices",
		"title": "Repair",
		"gridTitle": "Select a Device to send for Repair",
		"category": "Category",
		"reason": "Reason",
		"deviceName": "Device Name",
		"deviceNumber": "Device Number",
		"deviceStatus": "Device Status",
		"insurance": "Insurance",
		"linkedSmartcard": "Linked Smartcard",
		"repair": "Repair",
		"sendForRepairs": "Send For Repairs",
		"sendForRepairQuote": "Preview Quote",
		"sendForRepair": "Repaired",
		"referenceTitle": "Reference",
		"referenceTag": "Reference:",
		"reportedfault": "Customer Reported Fault",
		"repairtype": "Repair Type",
		"observation": "CSR Observation",
		"outcome": "Outcome",
		"RepairDetailsTitle": "Repair Details",
		"titleFinalQuote": "Final Quote",
		"preRepairQuote": "Response Message",
		"collectionPoint": "Collection Point",
		"activeService": "Active Service",
		"suspendService": "Active services must be suspended before the device can be repaired.",
		"moveToSwap": "Swap Device",
		"moveToCashSale": "Get Quote for New Device",
		"generateQuoteTitle": "Repair",
		"overrideQuoteTitle": "Override",
		"faultDiscription": "The CSR has logged fault for ",
		"moduleTitle": "Repair Process",
		"csrsuccessmessage": "CSR Repair Successfuly done.",
		"overrideTitle": "Supervisor Approval : Override repair quote",
		"supervisorName": "Supervisor Name",
		"passCode": "Password",
		"comment": "Comment",
		"quotegeneratesuccessmsg": " generated successfully.",
		"SrSCNoLabel": "Smartcard or Device Number",
		"filterDeviceChange": "Filter List of Devices by:",
		"sAPNotification": "SAP Notification No.: ",
		"popupRepairErrorMessageTitle": "Device can not be booked for repairs",
		"swapDecoder": "Swap Decoder",
		"btnNewDecoder": "New Decoder",
		"collectionPointError": "Please select Collection Point.",
		"noSmartCardError": "No Smartcard linked with device.",
		"approve": " Approve",
    "cancel": "Cancel",
    "cSRRepair": "CSR Repair",
    "customerRepair": "Customer Repair",
    "ddlfault": "Select a Fault...",
    "ddlRepairType": "Select a Repair Type...",
    "ddlCsrObser": "Select a CSR Observation...",
    "ddlOutcome": "Select a Outcome...",
    "ddlCollecPoint": "Select a Collection Point..."
	},

	"CustomerUnwanted": {
		"title": "Customer Unwanted Device",
		"subtitle": "Select a Device to Return",
		"return": "Return",
		"returnDevice": "Return Device",
		"moduleTitle": "Customer Unwanted",
		"sucessMessageHead": "Unwanted Device",
		"sucessMessageBody": "Device No:",
		"sucessMessageTrail": "Returned Sucessfully",
		"cancelService": "Cancel Service",
		"suspendService": "Services must be cancelled.",
		"noStockHandlerError": "There must have a valid Stock Handler",
		"noDevicesLoaded": "No devices loaded",
		"selectDeviceError": "Please Select a device",
    "confirmationMessage": "Are you sure want to return the device?",
    "placeHolder": "Type your search here"
	},

	"confirmSwap": {
		"title": "Confirm Swap",
		"gridTitle": "Find Issued Stock",
		"quoteNumber": "Quote Number",
		"receiptNumber": "Receipt Number",
		"submit": "Submit",
		"gridTitle2": "Replacement Device",
		"oldDevice": "Old Device",
		"replacementDevice": "Replacement Device",
		"confirmSwap": "Confirm Swap",
		"customerNotLoaded": "Customer not loaded",
		"customerRequired": "A customer is required to perform this operation.",
		"enterQuoteNumber": "Please enter quote number",
		"errorOccurred": "An error has occurred",
		"errorFunction": "Error in function ",
		"errorCRM": "Problem has occurred while logging an activity in CRM.",
		"problemOccurred": "A problem occurred",
		"messageFailed": "Message event name and/or process fields are null. Message = ",
		"messageReceivedFailure": "Message Received Failure",
		"successfulMessage": "A successful message was received for the sender but there is no specific message for the received message event name.",
		"communicationFailure": "Communication failure between the browser and webMethods broker generic publish. No specific delivery failure method for the given event name could be found.",
		"faultExceptionOccurred": "FaultException occurred in the broker indicating message can't be processed for message type. No fault method implementation.",
		"getHardwareAgainstQuote": "Get Hardware Against Quote",
		"noDataFound": "No Data Found",
		"swapPerformedSuccessfully": "Swap Performed successfully"
	},

	"confirmSwapAvailability": {
		"title": "Confirm Swap",
		"findIssuedStock": "Find Hardware Quote",
		"issueStock": "Issue Hardware",
		"quoteNumber": "Quote Number",
		"serviceDevice": "Service Device",
		"performHardwareSwap": "Confirm Swap",
		"reason": "Reason:",
		"retrieveQuote": "Retrieve Quote",
		"deviceModel": "Device Model",
		"faultyDevice": "Faulty Device",
		"faultySerialNumber": "Faulty Serial Number",
		"replacementDevice": "Replacement Device",
		"replacementSerialNumber": "Replacement Serial Number",
		"sQuoteNumber": " ",
		"quoteRequired": "Quote Number is required",
		"confirmSwapAvailabilityTitle": "Confirm Swap Availability",
		"noGoodsMovementIssued": "No goods movement issued",
		"confirmSwap": "Confirm Swap",
		"validSerialNumber": "Please enter valid quote number to retrieve!",
		"issueHardware": "Issue Hardware",
		"NoFaultyDevices": "No replacement or faulty devices found. Please correct to continue!",
		"confirmSwapAvailabilityOk": "Confirm swap availability performed successfully",
		"swapConfirmedSuccessfully": "Swap Confirmed successfully",
		"errorCRM": "Problem has occurred while logging an activity in CRM.",
		"problemOccurred": "A problem occurred",
		"messageNull": "Message event name and/or process fields are null. Message = ",
		"successfulMessage": "A successful message was received for the sender but there is no specific message for the received message event name.",
		"communicationFailure": "Communication failure between the browser and webMethods broker generic publish. No specific delivery failure method for the given event name could be found.",
		"faultExceptionOccurred": "FaultException occurred in the broker indicating message can't be processed for message type. No fault method implementation."
	},

	"performSwap": {
		"title": "Swap",
		"gridTitle": "Select a Device to Swap",
		"deviceName": "Device Name",
		"deviceNumber": "Device Number",
		"deviceStatus": "Device Status",
		"insurance": "Insurance",
		"linkedSmartcard": "Linked Smartcard",
		"insuranceStartDate": "Insurance Start Date",
		"swap": "Swap",
		"pairedSwap": "Paired Swap",
		"category": "Category",
		"reason": "Reason",
		"generateSwapQuote": "Generate Swap Quote",
		"quoteDetails": "Quote details",
		"quoteNumber": "Quote number:",
		"quoteStatus": "Quote status:",
		"tabAccept": "Accept Quote",
		"item": "Item",
		"subscriptionCost": "Subscription Cost",
		"deviceCost": "Device Cost",
		"tax": "Tax",
		"total": "Total",
		"sendQuoteVia": "Send Quote Via",
		"communicationLanguage": "Communication Language",
		"btnSend": "Send",
		"payNow": "Pay Now",
		"quantity": "Available Quantity",
		"materialDescription": "Material Description",
		"price": "Price",
		"hardwareLocation": "Hardware location",
		"fillDeviceSerial": "Please fill in device serial number.",
		"noLinkedDevice": "No linked device",
		"pleaseSelectDevice": "Please Select a device",
		"categoryRequired": "Category is required",
		"reasonRequired": "Reason is required",
		"sendQuotation": "Send Quotation",
		"performSwap": "Perform Swap",
		"noQuoteGenerated": "No quote generated",
		"selectCommunication": "Please Select Communication Type",
		"selectCommunicationLanguage": "Please Select Communication Language",
		"noDeviceFound": "No Device Found",
		"branchSwap": "Branch Swap",
		"noDevicesLoaded": "No devices loaded",
		"customerWithDevicesRequired": "A customer with devices is required to perform this operation.",
		"quotationSuccessfully": "Quotation has been sent successfully",
		"quotationGenSuccessfully": "Quotation Generated Successfully! Quote Number: ",
		"noNeedAcceptPayment": "No need to accept or proceed with payment.",
		"noQuotationsFound": "No Quotations Found",
		"quotationAcceptedSuccessfully": "Quotation Accepted Successfully",
		"acceptQuotations": "Accept Quotations",
		"acceptQuotationFailed": "Accept Quotation Failed."
	},

	"swapMaterialAvailability": {
		"back" : "BACK",
		"title": "Swap",
		"gridTitle": "Select a Device to Swap",
		"deviceName": "Device Name",
		"deviceNumber": "Device Number",
		"deviceStatus": "Device Status",
		"insurance": "Insurance",
		"linkedSmartcard": "Linked Smartcard",
		"insuranceStartDate": "Insurance Start Date",
		"swap": "Swap",
		"pairedSwap": "Paired Swap",
		"category": "Category",
		"reason": "Reason",
		"checkAvailability": "Check Availability",
		"quoteDetails": "Final Quote Details",
		"quoteNumber": "Quote number:",
		"quoteStatus": "Quote status:",
		"tabAccept": "Swap Details",
		"item": "Item",
		"subscriptionCost": "Subscription Cost",
		"deviceCost": "Device Cost",
		"tax": "Tax",
		"total": "Total",
		"sendQuoteVia": "Send Quote Via",
		"communicationLanguage": "Communication Language",
		"btnSend": "Send",
		"acceptQuote": "Pay Now",
		"quantity": "Quantity",
		"materialDescription": "Material Description",
		"price": "Price",
		"hardwareLocation": "Hardware location",
		"customerReportedFaults": "Customer Reported Fault",
		"csrObservation": "CSR's Observation",
		"generateSwapQuote": "Generate Swap Quote",
		"chargeOverride": "Supervisor Override",
		"chargeOverrideHeading": "Supervisor Override Void Warranty",
		"chargeOverrideApprove": "Override",
		"chargeOverrideValidationFailure": "Supervisor Validation Failure",
		"supervisorUsername": "Username",
		"comment": "Comment",
		"authenticationErrorMessage": "Could not authenticate the supervisor.  Error reported: __error__",
		"chargeOverrideNotPermitted": "The supervisor does not have the required permission to override the void warranty.",
		"preQuoteDetails": "Pre-Quote Details",
		"pleaseSelectADevice": "*Please select a device.",
		"selectDevice": "Select Device",
		"fillInDeviceSerial": "Please fill in device serial number.",
		"noLinkedDevice": "No linked device",
		"performSwap": "Perform Swap",
		"pleaseSelectADevice2": "Please Select a device",
		"categoryIsRequired": "Category is required",
		"reasonIsRequired": "Reason is required",
		"xtraviewNetwork": "Device is part of an Xtraview Network. Please break Xtraview Network before continuing",
		"swapAvailability": "Swap Availability",
		"errorMessage": "Error message",
		"noSAPLocation": "Location not found for SAP plant",
		"noSAPPrice": "No SAP price found",
		"sendQuotation": "Send Quotation",
		"communicationType": "Please Select Communication Type",
		"communicationLanguage2": "Please Select Communication Language",
		"serialNumber": "Serial Number",
		"inActive": "In-Active",
		"branchSwap": "Branch Swap",
		"noQuotationsFound": "No Quotations Found",
		"commercialCustomer": "Commercial customer",
		"noDeviceError": "No Device Found",
		"noDevicesLoaded": "No devices loaded",
		"customerWithDevices": "A customer with devices is required to perform this operation.",
		"quotationSentSuccessfully": "Quotation has been sent successfully",
		"unableSendQuotation": "Unable to send Quotation",
		"quotationGeneratedSuccessfully": "Quotation Generated Successfully! Quote Number: ",
		"acceptQuotations": "Accept Quotations",
		"quotationAcceptedSuccessfully": "Quotation Accepted Successfully",
		"acceptQuotationFailed": "Accept Quotation Failed."
	},

  "cancelServiceOrder": {
    "back": "BACK",
    "createDate": "Created Date",
    "customerQuoteUID": "Customer Quote ID",
    "doneCancelServiceOrder": "Quote cancellation sent for processing",
    "error": "Error",
    "errorCancelQuote": "Unable to cancel quote ",
    "errorGetQuote": "Unable to retrieve information for quote ",
    "exception": "Exception",
    "expiryDate": "Expiry Date",
    "failCancelServiceOrder": "Unable to send quote cancellation for processing",
    "gridTitle": "Service Order",
    "logInit": "Constructing Cancel Service Order",
    "messageCancelQuote": "Quote cancelled successfully",
    "messageCanSubmitData": "Fill required data",
    "messageHandlers": "Quote cancelled failed with response false",
    "messageSearchServiceOrder": "No data returned",
    "model": "Model",
    "name": "Name",
    "quoteItems": "Quote Items:",
    "quoteNumber": "Quote number",
    "registerValidations": "Please fill in a quote number",
    "responseGetQuote1": "Quote",
    "responseGetQuote2": " does not belong to customer ",
    "responseGetQuote3": "Cannot proceed with cancelling service order. Error",
    "search": "Search",
    "searchGridTitle": "Quote",
    "submit": "Cancel service order",
    "title": "Cancel Service Order",
    "totalPrice": "Total Price",
		"warning": "Warning",
		"success" : "Cancel service order"
  },

	"setToStolen": {
		"title": "Stolen Devices",
		"gridTitle": "Set To Stolen",
		"deviceName": "Device Name",
		"deviceNumber": "Device Number",
		"deviceStatus": "Device Status",
		"insurance": "Insurance",
		"linkedSmartcard": "Linked Smartcard",
		"stolen": "Stolen",
		"DDCCSwap": "DDCC Swap:",
		"caseDetails": "Case Details",
		"policeCaseNumber": "Police Case Number",
		"policeStation": "Police Station",
		"caseDate": "Case Date",
		"claimNumber": "Claim Number",
    "setToStolen": "Set To Stolen",
    "logInit": "Constructing Stolen Devices",
    "errorPrerequisiteHeader": "Customer not loaded",
    "errorPrerequisiteMessage": "A customer is required to perform this operation.",
    "warningConfirmSerialNo": "Please Select a device for Confirmation",
    "warningConfirmSerialNo2": "Selected Device and Confirmed Device Must be same",
    "warningSetToStolen": "Please select the device you want to set to stolen.",
    "warningSetToStolenCaseNumber": "Case Number",
    "warningSetToStolenCaseNumberMessage": "Please provide a case number for the stolen device.",
    "warningSetToStolenPoliceStationName": "Police Station Name",
    "warningSetToStolenPoliceStationNameMessage": "Please provide the police station name where the case was reported.",
    "warningSetToStolenCaseDate": "Case Date",
    "warningSetToStolenCaseDateMessage": "Please provide the date of when the case was reported.",
    "warningSetToStolenClaimNumber": "Claim Number",
    "warningSetToStolenClaimNumberMessage": "New Device cannot be issued without an approved Claim Number.",
    "errorMessageFailureMessageEventReceived": "Problem has occurred while logging an activity in CRM.",
    "errorMessageHandle": "Message Received Failure",
    "errorMessageHandleType": "Message type: ",
    "errorMessageHandleMessage": "Message event name and/or process fields are null. Message",
    "messageReceived": "A successful message was received for the sender but there is no specific message for the received message event name.",
    "messageDeliveryFailure": "Communication failure between the browser and webMethods broker generic publish. No specific delivery failure method for the given event name could be found.",
    "messageFault": "FaultException occurred in the broker indicating message can't be processed for message type. No fault method implementation.",
    "messageHardwareStatusChangedReceived": "Device Status Set To Stolen Successfully! Serial Number -",
    "messageHardwareStatusChangedReceivedQuestion": " Would you like to redirect to DCC Claims?",
    "successAcceptQuotations": "Accept Quotations",
    "successAcceptQuotationsMessages": "Quotation Accepted Successfully! Quote Number -",
    "dangerAcceptQuotations": "Accept Quotation Failed.",
    "error": "Error",
    "errorCatch": "Error in function",
    "errorNoDevice": "No Device Found",
    "errorNoDeviceLoaded": "No devices loaded",
    "errorNoDeviceLoadedMessage": "A customer with devices is required to perform this operation."
	},

	"deviceAgreementManagement": {
		"title": "Device Group Management",
		"gridTitle": "Group Information",
		"gridTitle2": "Move device to Group",
		"fromDevice": "Move Device",
		"toAgreement": "To Group",
		"moveDevice": "Move Device",
		"agreement": "Group ID",
		"commercialProduct": "Commercial Product",
		"hardwareModel": "Model",
		"status": "Status",
		"serialNumber": "Serial Number",
		"agreementType": "Agreement Type",
		"customerNotLoaded": "Customer not loaded",
		"customerIsRequired": "A customer is required to perform this operation.",
		"deviceAgreementManagement": "Device Agreement Management",
		"selectDeviceSerial": "Please select a device serial number.",
		"selectAgreementNumber": "Please select an agreement number.",
		"noDeviceMoved": "No device moved for customer with id:",
		"deviceMoved": "Device moved successfully.",
		"errorOccurred": "An error has occurred",
		"errorFunction": "Error in function",
		"noDevicesAgreement": "No devices/agreement found for customer with id:",
		"errorInFunction": "Error in function",
		"errorCRM": "Problem has occurred while logging an activity in CRM.",
		"problemOccurred": "A problem occurred",
		"eventFiledsNull": "Message event name and/or process fields are null. Message = ",
		"successfulMessage": "A successful message was received for the sender but there is no specific message for the received message event name.",
		"communicationFailure": "Communication failure between the browser and webMethods broker generic publish. No specific delivery failure method for the given event name could be found.",
		"faultException": "FaultException occurred in the broker indicating message can't be processed for message type. No fault method implementation.",
		"eventMessageFail": "Event Message failed:"
	},

	"returns": {
		"title": "Returns",
		"gridTitle": "Process Returns",
		"retrieveSalesOrder": "Retrieve Sales Order",
		"quoteOrDeviceNumber": "Quote or Device Number",
		"retrieveOrder": "Retrieve Order",
		"salesOrder": "Sales Order",
		"item": "Item",
		"deviceNumber": "Device Number",
		"deviceCost": "Device Cost",
		"tax": "Tax",
		"total": "Total",
		"returnItem": "Return",
		"processReturn": "Process Return",
		"reasonforReturn": "Reason for Return",
		"returns": "Returns",
		"deviceNumber.": "Please enter a quote or device number.",
		"reasonCode": "Please select a returns reason code.",
		"deviceForprocessing": "Please select at least one device for processing.",
		"setDeviceStolen": "Set Device To Stolen",
		"noDeviceFound": "No Device Found",
		"noDevicesLoaded": "No devices loaded",
		"customerRequired": "A customer with devices is required to perform this operation.",
		"returnCreatedSuccessfully": "Return created successfully. Return Order: ",
		"problemCRM": "Problem has occurred while logging an activity in CRM.",
		"messageReceivedFailure": "Message Received Failure",
		"aProblemOccurred": "A problem occurred",
		"messageEventName": "Message event name and/or process fields are null. Message = ",
		"successfulMessage": "A successful message was received for the sender but there is no specific message for the received message event name.",
		"communicationFailure": "Communication failure between the browser and webMethods broker generic publish. No specific delivery failure method for the given event name could be found.",
    "faultException": "FaultException occurred in the broker indicating message can't be processed for message type. No fault method implementation.",
        "reasonDropDefault":  "Select an Option...",
    "eventFailed": "Event failed for message: "

	},

  "createProcurementOrder": {
    "action": "Action",
    "add": "Add",
    "businessUnit": "Business Unit",
    "cancelOrder": "Cancel",
    "clear": "Clear",
    "confirmation": "Confirmation",
    "confirmationCancelOrder": "Are you sure you want to cancel this order?",
    "createOrder": "Create Order",
    "createOrderTitle": "Create Order",
    "delete": "Delete",
    "deviceName": "Device Name",
    "deviceNamePrompt": "Select device",
    "error": "Error",
    "errorPublishRequestOnBus": " has failed",
    "errorStartFeatureToggle": "Error while checking feature toggle. Error Details:",
    "exception": "Exception",
    "exceptionAddOrderItem": "Error in function Add Order Item: ",
    "exceptionAddOrderItemGetAgencyPrice": "Error in function addOrderItem/calculateUnitPrice: ",
    "exceptionCalculateUnitPrice": "Quantity can not be a value of 0",
    "exceptionCreateOrder": "Error in function createOrder: ",
    "exceptionDeleteOrderItem": "Error in function deleteOrderItem: ",
    "grandTotalAmount": "Grand Total",
    "itemStatus": "Item Status",
    "logInit": "Constructing Create Procurement Order controller",
    "messageMessageDeliveryFailure": "Communication failure between the browser and webMethods broker generic publish. No specific delivery failure method for the given event name could be found",
    "messageMessageFailureMessageEventReceived": "Problem has occurred while logging an activity in CRM",
    "messageMessageFault": "FaultException occurred in the broker indicating message can't be processed for message type. No fault method implementation",
    "messageMessageHandle": "Message event name and/or process fields are null. Message = ",
    "messageMessageProcureOrderCreatedReceived": "Procurement Order created successfully. Procurement Order: ",
    "messageMessageReceived": "A successful message was received for the sender but there is no specific message for the received message event name",
    "messagePublishRequestOnBus": "' has been published successfully",
    "myReference": "My Reference",
    "orderDate": "Order Date",
    "orderItems": "Order Items",
    "orderItemsTitle": "Order Items",
    "price": "Price (incl. VAT)",
    "quantity": "Quantity",
    "requiredDate": "Required Date",
    "title": "Create Procurement Order",
    "totalAmount": "Total Amount (incl. VAT)",
    "unitPriceZar": "Unit Price (incl. VAT)",
    "warning": "Warning",
    "warningAddOrderItem": "Please ensure that all required fields are filled in, Quantity is a positive integer number and Reference is less than 20 characters before adding item",
    "warningCreateOrder": "Minimum of one item must be selected to place an order"
  },

  "outstandingOrders": {
    "actions": "Actions",
    "error": "Error",
    "exception": "Exception",
    "gridTitle": "List of Orders",
    "logInit": "Constructing Outstanding Orders controller",
    "myReference": "My Reference",
    "requiredDate": "Required Date",
    "salesQuoteNumber": "Quote Number",
    "status": "Status",
    "title": "Outstanding Orders",
    "view": "View",
    "viewBtn": "View",
    "warning": "Warning"
  },

  "procurementOrder": {
    "deviceName": "Device Name",
    "error": "Error",
    "grandTotalAmount": "Grand Total",
    "itemStatus": "Item Status",
    "logInit": "Constructing Procurement Order controller",
    "myReference": "My Reference",
    "orderDate": "Order Date",
    "orderItemsTitle": "Order Items",
    "orderStatus": "Order Status",
    "quantity": "Quantity",
    "requiredDate": "Required Date",
    "salesOrderNumber": "Sales Order Number",
    "salesQuoteNumber": "Quote Number",
    "title": "Procurement Order",
    "totalAmount": "Total Amount (incl. VAT)",
    "unitPrice": "Unit Price",
    "viewOrderTitle": "View Order"
  },

	"retailReturn": {
		"messagePublishRetailReturn": "Please enter valid device number to Process",
		"messageHardwareStatusChangedReceived": "Hardware Returned Successfully",
		"success": "Success",
		"country": "Country",
		"deviceNumber": "Device Number",
		"doneDeviceAttributesRetrieveDeviceInfo": "Device has no Active Smartcard, cannot process Return",
		"doneMaterialInformationRetrieveDeviceInfo": "Cannot return Device of type SMARTCARD",
		"doneRetrieveDeviceInfo": "Unable to retrieve information for device with id: ",
		"doneRetrieveDeviceInfo2": " Null data returned. ",
		"doneWarrantyDetailsRetrieveDeviceInfo": "Device has no Warranty, cannot process Return",
		"error": "Error",
		"exception": "Exception",
		"failMessage": " Error message",
		"failRetrieveDeviceInfo": "An error has occurred, please look at logs for more information",
		"gridTitle": "Return Device",
		"location": "Location",
		"logInit": "Constructing Retail Return controller",
		"messageReturnDevice": "Please enter a device number",
		"returnDevice": "Return Device",
		"title": "Retail Return",
		"warning": "Warning"
	},

  "stockService": {
    "customerNotLoaded": "Customer not loaded",
    "failedLoading": "Failed loading",
    "customerRequired": "A customer is required to perform this operation",
    "propertyModelDoesNotExist": "Property on model does not exist",
    "retrieveHardware": "Retrieve Hardware",
    "noDevicesReturned": "No devices returned for customer with id: ",
    "error": "Error",
    "eventMessageFor": "Event Message for",
    "hasFailed": "has failed.",
    "errorInFunction": "Error in function",
    "exception": "Exception",
    "errorOccurred": "An error has occurred",
    "errorOccurredLogs": "An error has occurred, please look at logs for more information",
    "successfulMessageReceived": "A successful message was received for the sender but there is no specific message for the received message event name.",
    "communicationFailure": "Communication failure between the browser and webMethods broker generic publish. No specific delivery failure method for the given event name could be found.",
    "faultExceptionMessage": "FaultException occurred in the broker indicating message can't be processed for message type. No fault method implementation.",
    "problemCRM": "Problem has occurred while logging an activity in CRM.",
    "messageReceivedFailure": "Message Received Failure",
    "messageType": "Message type",
    "aProblemOccurred": "A problem occurred",
    "messageEventFieldsNull": "Message event name and/or process fields are null. Message = ",
    "noDataInFucnKeyFromList": "Data not found in function [getKeyFromList] for key: "
  },

  "swapTrack": {
    "title": "Track Swap",
    "swapTrackTitle": "Find Quote",
    "logInit": "Constructing Swap Track controller",
    "track": "Track",
    "qouteNumber": "Quote Number",
    "information": "Information",
    "customerNumber": "Customer Number",
    "processState": "Process State",
    "swapType": "Swap Type",
    "reportedBy": "Reported By",
    "reportedDate": "Reported Date",
    "faultyDevice": "Faulty Device",
    "repairDevice": "Paired Device",
    "qualifiedDevice": "Qualified Device",
    "replacementDevice": "Replacement Device",
    "replacementPair": "Replacement Paired Device",
    "error": "Error",
    "errorMessage": "No record found of",
    "steps": "Step State",
    "popUpCorrelationId": "CorrelationID: ",
    "popUpErrorMessage": "Error Message: "
  },

	"modal": {
		"buttonLabel": "Add supporting documents",
		"popUp": "Upload File(s)"
	},
	"back": "BACK"
}